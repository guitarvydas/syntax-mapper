Odin0Dpass2 {
  program = item+
  item =
    | procDef -- procdef
    | space -- space
    | any -- other

  procDef = "def" spaces id spaces formalsList spaces procbody
  formalsList = "(" spaces formal* ")"
  formal = id spaces
  type = typechar+
  typechar =
    | "(" typecharinner+ ")" -- parenthesized
    | ~space ~"(" ~")" any -- bottom

  typecharinner =
    | "(" typecharinner+ ")" -- parenthesized
    | ~"(" ~")" any  -- bottom


  retList =
    | formalsList -- formalsList
    | typeList -- typeList
    | (~space ~id any)* id -- singleType

  typeList = "(" typecomma+ ")"
  typecomma =
    | type spaces comma spaces -- withcomma
    | type spaces -- last

  procbody = spaces "(-" bodychar+ "-)"
  bodychar =
    | "(-" bodychar+ "-)" -- recursive
    | ~"(-" ~"-)" any -- bottom

  id = idfirst idrest*
  idfirst = letter | "_"
  idrest = alnum | "_"
  comma = ","
}

